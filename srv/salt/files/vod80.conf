#geoip_country /usr/local/webserver/nginx/conf/GeoIP.dat;

server {
    listen 80;
    server_name 127.0.0.1 localhost 192.168.253.109 vod1.lekan.com vod2.lekan.com vod3.lekan.com vod4.lekan.com vod5.lekan.com dxtv.lekan.com chn.lekan.com cnc.lekan.com bgp.lekan.com 001.vod.ts.u.lekan.com 001.vod.xx.u.lekan.com 001.vod.wh.u.lekan.com 001.vod.ly.t.lekan.com 001.vod.sy.t.lekan.com 001.vod.ms.t.lekan.com 001.vod.fs.t.lekan.com 001.vod.fz.t.lekan.com 001.vod.ln.u.lekan.com 002.vod.ln.u.lekan.com 003.vod.ln.u.lekan.com 001.vod.ta.u.lekan.com 002.vod.ta.u.lekan.com 003.vod.ta.u.lekan.com 004.vod.ta.u.lekan.com 001.vod.sz.t.lekan.com 002.vod.sz.t.lekan.com 001.vod.dg.t.lekan.com 002.vod.dg.t.lekan.com 003.vod.dg.t.lekan.com 001.vod.zj.t.lekan.com 001.vod.nb.t.lekan.com vod.fj.u.lekan.com vod.hb.u.lekan.com vod.dg.t.lekan.com vod.ha.u.lekan.com vod.he.u.lekan.com vod.ln.u.lekan.com vod.nb.t.lekan.com vod.qd.t.lekan.com vod.qd.u.lekan.com vod.sc.t.lekan.com vod.sd.t.lekan.com vod.sd.u.lekan.com vod.sz.t.lekan.com vod.fs.t.lekan.com vod.hb.t.lekan.com;
    access_log logs/host.access.log main;

    proxy_set_header Host "vod1.lekan.com";
    proxy_intercept_errors on;
    error_page 404 500 501 502 503 504 = @failure;
#CDN-TEST-FILE
    location ~ lekan.* {
        root /lekan;
        }


    location / {
        proxy_pass http://video_server_9000;

        if ($uri ~ \.m3u8$) {
            expires -1; 
        }
    }
    location ~ ^/video1/977/77/134977E1/cn/video.ssm/134977E1  {
        proxy_pass http://squid_instance_0$url;
}

#start
location ~ \.mp4$ {
           return 403;
     }
location ~ "/(\d{12})/(\w{32})((/.*)/[ce]n/video\.ssm/.+)" {
            set $sercureID "f1447d1045c373b44d1ff5f738bd08397768bad1";
            set $timeId $1;
            set $md5Sum $2;
            set $fileFullName "/raw$3";
            set $fileName $4;
            rewrite_by_lua '
                local md5sum = string.lower(ngx.var.md5Sum)
                local md5sum2 = ngx.md5(ngx.var.sercureID .. ngx.var.timeId .. ngx.var.fileName)
                local timeTab = {}
                timeTab.year, timeTab.month, timeTab.day, timeTab.hour, timeTab.min = string.match(ngx.var.timeId , "(%d%d%d%d)(%d%d)(%d%d)(%d%d)(%d%d)")
                local now = os.time()
                local url_time = os.time(timeTab)

                if md5sum ~= md5sum2 then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end

                if now < url_time - 600 then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end

                if now > url_time + 7200 then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end

				if ngx.var.is_args == "?" then
                    ngx.exec(tostring(ngx.var.fileFullName)..tostring(ngx.var.is_args)..tostring(ngx.var.args))
                else
                    ngx.exec(ngx.var.fileFullName)
                end
            ';
}




 location ~ ^/raw(/.*) {
        set $url $1;

        if ($url ~ \.m3u8) {
            proxy_pass http://video_server_9000$url$is_args$args;
        }

        if ($url ~ (1|2|3|5)\.ts$) {
            proxy_pass http://squid_instance_0$url;
        }

        if ($url ~ (7|9)\.ts$) {
            proxy_pass http://squid_instance_1$url;
        }

        if ($url ~ (0|4)\.ts$) {
            proxy_pass http://squid_instance_2$url;
        }

        if ($url ~ (6|8)\.ts$) {
            proxy_pass http://squid_instance_3$url;
        }


 }






location ~ \.ts$ {
	if ($remote_addr !~ ^(?:127\.0\.0.1|58\.68\.228\.)) {
		return 403;
	}
	proxy_pass http://video_server_9000;
}
#end
 #服务器端广告
    #结束

    location /nginx_status {
        stub_status on;
        access_log off;
    }

    location = /do_not_delete/noc.gif {
        access_log off;
        root html;
    }

    location ~ /video\.ssm/video\.f4m {
#        if ($geoip_country_code != CN) {
#            rewrite .* http://res.lekan.com/do_not_delete/zone.gif;
#        }

        proxy_pass http://video_server_9000$uri;

        if ($uri ~ \.m3u8$) {
            expires -1;
        }
    }

    location @failure {
        access_log logs/failure.access.log failure;
        root html;
    }
}
